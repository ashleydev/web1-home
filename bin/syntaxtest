#!/usr/bin/perl

use strict;
use v5.10.0;

use Term::ANSIColor qw(:constants);
use File::Basename;

unless (@ARGV) {
  say "Purpose: to check perl / PHP syntax from files passed as arguments";
  print "\n";
  say "Usage: ".basename($0)." [file1] (file2 file3 ...)";
  print "\n";
  exit(1);
}

foreach (@ARGV) {
  
  when (-d $_) { next; }

  when (! -f $_) { say RED, "$_ doesn't exist", RESET; }
  when (! -r $_) { say MAGENTA, "$_ cannot be read", RESET; }

  when (m{\.(pl|pm|php)$}) { # perl / php file

    my $programming_language;
    my $errlev;
    my $file = $_;

    given ($1) {
      when (/(pm|pl)/) { $programming_language = "perl"; qx{perl -I/home/pubstock/perl/lib -I/home/http/www/admin -c $file > /dev/null 2>&1}; $errlev = $?; } # perl
      when ("php") { $programming_language = "php"; qx{php -l $file > /dev/null 2>&1}; $errlev = $?; } # php
    }

    if (defined($errlev)) {
      if ($errlev) { # > 0 == error
	say BOLD, YELLOW, "$_ failed $programming_language syntax check", RESET;
      } else {
	#say BOLD, GREEN, "$_ OK", RESET;
	say "$_ OK";
      }
    }
     
  }

  default { say BOLD, "$_ skipped", RESET; }

}
