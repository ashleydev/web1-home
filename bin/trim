#!/usr/bin/perl

use String::Strip;

my $flag_remove_blanks;
my $flag_help;
my $flag_full;
my $flag_full_spaces;

foreach (@ARGV) {
  if (m/^(--remove-blanks|-b|-r)$/) { $flag_remove_blanks = 1; }
  elsif (m/^(--help|-h)$/) { $flag_help = 1; }
  elsif (m/^(--newline-remove|-n)$/) { $flag_full = 1; }
  elsif (m/^(--newline-spaces|-s)$/) { $flag_full_spaces = 1; }
}

if ($flag_help) {

  print "Purpose:  Trims whitespace out of lines\n\n";
  print "Get rid of ALL new lines\n";
  print "\tex: $0 --newline-remove\n";
  print "\tex: $0 -n\n\n";
  print "Get rid of new lines and put spaces, and trim the result after.  * Not on the fly results\n";
  print "\tex: $0 --newline-spaces\n";
  print "\tex: $0 -s\n\n";
  print "Get rid of blank lines too\n";
  print "\tex: $0 --remove-blanks\n";
  print "\tex: $0 -r\n\n";
  print "\tex: $0 -b\n\n";
  print "This help screen\n";
  print "\tex: $0 --help\n";
  print "\tex: $0 -h\n";
  print "\n";

  exit;

} 

my $buffer; # used for the flag_full_spaces option only

while (<STDIN>) {
  
  $_ =~ s/^[ \t]*//; # don't use \s here, it strips \n's too
  $_ =~ s/[ \t]*$//;

  #StripLTSpace($_); # old way, may or may not be better
  #$_ .= "\n";

  if ($flag_remove_blanks && ($_ eq "\n")) {
    # don't print the line
  } else {

    if ( $flag_full_spaces) {
      $_ =~ s/\n$/ /;
    }
    elsif ( $flag_full) {
      chomp $_;
    }

    if ($flag_full_spaces) {
      $buffer .= $_;
    } else {
      print $_; # main part of the results
    }

  }

}

if ($flag_full_spaces && $buffer) {
  StripLTSpace($buffer);
  print $buffer."\n";
}
