#!/usr/bin/perl

# For perl, by perl.
# probably best not to rely on this script.
#
# KNOWN ISSUE: it cannot tell if a bracket is part of a string or not

use strict;
use String::Strip;

my $spacing = '  ';
my $count_tab = 0;
my $count_paren = 0;
my $on = 1;

# START ---------------------- 

my $file = $ARGV[0];

sub bracket_parse {

  my $in = shift;
  
  $in =~ s/[^\{\(\}\)]//g;

  my $a = ($in =~ tr/\(//);
  my $b = ($in =~ tr/\)//);

  my $result = ($a - $b);

  return $result;

}

while (<STDIN>) {
  
  my $line = $_;
  my $beater = $line;

  $beater =~ s/#.*$//g;
  StripLTSpace($beater);

  my $skip_to_print;

  if (m/^=cut/) {
    $on = ( ! $on );
    $skip_to_print = 1;
  }

  my $ab = bracket_parse($beater);

  if ( ! $skip_to_print ) {
    if ($on) {
      if ($beater =~ m/^\}/) {
	$count_tab--;
      }

      #if ($ab < 0) {
	#$count_tab += $ab;
      #}
    }

    if ($count_tab) {
      for (1..$count_tab) {
	$line = $spacing.$line;
      }
    }

    if ($on) {
      if ($beater =~ m/\{$/) {
	$count_tab++;
      } 
      #if ($ab > 0) {
	$count_tab += $ab;
      #}
    }
  }

  if ($line =~ m/^\s*$/) {
    print "\n";
  } else {

    # request by Eric.  Have 8 spaces turn into a \t
    while ($line =~ m/^        /) {
      $line =~ s/^        /\t/;
    }
    print $line;
  }
}
